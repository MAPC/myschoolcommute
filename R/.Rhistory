source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
levels(mt_df$Time)
source("compile.R")
source("compile.R")
b_dft$buffers
b_dft$buffers
source("compile.R")
source("compile.R")
b_dft
buffers
c("Students",buffers)
source('compile.R')
?latex
source('compile.R')
mSb_df
modeDFwideFunction
mSb_df_wide
mSb_df_wide[,2:6]
mSb_df_wide[,1:5]
buffers
mSb_df_wide
mSb_df_wide <- modeDFwideFunction(mSb_df)
mSb_df_wide[,7:11] <- round(mSb_df_wide[,7:11],0)
mSb_df_wide[,7:11] <- lapply(mSb_df_wide[,7:11],as.character)
mSb_df_wide_pct <- mSb_df_wide[,c(1,7:11)]
mSb_df_wide
source('compile.R')
mSb_df_wide
mSb_df
modeDFwideFunction
round(mSb_df_wide[,7:11],0)
mSb_df_wide <- modeDFwideFunction(mSb_df)
#mSb_df_wide[,7:11] <- round(mSb_df_wide[,7:11],0)
#mSb_df_wide[,7:11] <- lapply(mSb_df_wide[,7:11],as.character)
mSb_df_wide_pct <- mSb_df_wide[,c(1,7:11)]
mSb_df_wide_pct
gmSbse_df
mSb_df <- ddply(gmSbse_df,
.(Mode,Buffer),
summarise,
Estimate = sum(Surveyed*Enroll/Grade_Surveyed,na.rm=T))
mSb_df
mSb_df_wide <- modeDFwideFunction(mSb_df)
mSb_df_wide
source('compile.R')
source('compile.R')
source('compile.R')
source('compile.R')
source('compile.R')
source('compile.R')
source('compile.R')
source('compile.R')
source('compile.R')
source('compile.R')
source('compile.R')
source('compile.R')
source('compile.R')
source('compile.R')
source('compile.R')
source('compile.R')
source('compile.R')
source('compile.R')
source('compile.R')
source('compile.R')
source('compile.R')
H
source('compile.R')
source('compile.R')
source('compile.R')
source('compile.R')
source('compile.R')
gmSbse_df
head(gbmTS_df_temp)
gbmTS_df_temp_time <- count(DF,.(grade,BUFF_DIST,ModeToMod,ModeFromMod))
head(gbmTS_df_temp_time)
head(gmSbse_df)
# mb_df will have three columns
# Columns:
# Buffer: 0.5, 1.0, 1.5, 2.0, 2.0+
# Mode: "Auto" "School Bus" "Walk"
# Surveyed: Number of Students Surveyed
# Enroll: Students enrolled
gmSbse_df <- gmSbse_df_create()
# 2:
# Count students by grade, buffer, and ModeToMod/ModeFromMod.
# Columns:
# Grade = grade level
# BUFF_DIST = Buffer
# ModeTo = Mode to school
# freq = count of students
gbmTS_df_temp_morning <- count(DF,.(grade,BUFF_DIST,ModeToMod))
gbmTS_df_temp_afernoon <- count(DF,.(grade,BUFF_DIST,ModeFromMod))
# 3
# fill in Surveyed column in gbse_df
gmSbse_df_morning <- gmSbse_df
gmSbse_df_afternoon <- gmSbse_df
gmSbse_df_morning <- mergeDF(gmSbse_df_morning,
gbmTS_df_temp,
data.column1 = "Surveyed",
data.column2 = "freq",
by.x = c("Grade","Buffer","Mode"),
by.y = c("grade","BUFF_DIST","ModeToMod"))
gmSbse_df_afternoon <-  <- mergeDF(gmSbse_df_afternoon,
gbmTS_df_temp,
data.column1 = "Surveyed",
data.column2 = "freq",
by.x = c("Grade","Buffer","Mode"),
by.y = c("grade","BUFF_DIST","ModeFromMod"))
# 3:
# Add Column:
# Grade_Surveyed = Total Students Surveyed By Grade
gmSbse_df_morning <- ddply(gmSbse_df_morning,
.(Grade),
transform,
Grade_Surveyed = sum(Surveyed))
gmSbse_df_afternoon <- ddply(gmSbse_df_afternoon,
.(Grade),
transform,
Grade_Surveyed = sum(Surveyed))
# 4:
# Merge gmSbse_df with et_df: Enrollment by Grade
# Fills
# Column
# Enroll
gmSbse_df_morning <- mergeDF(gmSbse_df_morning,
et_df,
data.column1 = "Enroll",
data.column2 = "value",
by.x = "Grade",
by.y = "variable")
gmSbse_df_afternoon <- mergeDF(gmSbse_df_afternoon,
et_df,
data.column1 = "Enroll",
data.column2 = "value",
by.x = "Grade",
by.y = "variable")
gmSbse_df_morning <-  subset(gmSbse_df_morning,Enroll > 0)
gmSbse_df_morning <-  droplevels(gmSbse_df_morning)
gmSbse_df_afternoon <-  subset(gmSbse_df_afternoon,Enroll > 0)
gmSbse_df_afternoon <-  droplevels(gmSbse_df_afternoon)
# 6:
# Sum students by buffer
mSb_df_morning <- ddply(gmSbse_df_morning,
.(Mode,Buffer),
summarise,
(Surveyed*Enroll/Grade_Surveyed,na.rm=T))
mSb_df_afternoon <- ddply(gmSbse_df_afternoon,
.(Mode,Buffer),
summarise,
Estimate = sum(Surveyed*Enroll/Grade_Surveyed,na.rm=T))
# mb_df will have three columns
# Columns:
# Buffer: 0.5, 1.0, 1.5, 2.0, 2.0+
# Mode: "Auto" "School Bus" "Walk"
# Surveyed: Number of Students Surveyed
# Enroll: Students enrolled
gmSbse_df <- gmSbse_df_create()
# 2:
# Count students by grade, buffer, and ModeToMod/ModeFromMod.
# Columns:
# Grade = grade level
# BUFF_DIST = Buffer
# ModeTo = Mode to school
# freq = count of students
gbmTS_df_temp_morning <- count(DF,.(grade,BUFF_DIST,ModeToMod))
gbmTS_df_temp_afernoon <- count(DF,.(grade,BUFF_DIST,ModeFromMod))
# 3
# fill in Surveyed column in gbse_df
gmSbse_df_morning <- gmSbse_df
gmSbse_df_afternoon <- gmSbse_df
gmSbse_df_morning <- mergeDF(gmSbse_df_morning,
gbmTS_df_temp,
data.column1 = "Surveyed",
data.column2 = "freq",
by.x = c("Grade","Buffer","Mode"),
by.y = c("grade","BUFF_DIST","ModeToMod"))
gmSbse_df_afternoon <- mergeDF(gmSbse_df_afternoon,
gbmTS_df_temp,
data.column1 = "Surveyed",
data.column2 = "freq",
by.x = c("Grade","Buffer","Mode"),
by.y = c("grade","BUFF_DIST","ModeFromMod"))
# 3:
# Add Column:
# Grade_Surveyed = Total Students Surveyed By Grade
gmSbse_df_morning <- ddply(gmSbse_df_morning,
.(Grade),
transform,
Grade_Surveyed = sum(Surveyed))
gmSbse_df_afternoon <- ddply(gmSbse_df_afternoon,
.(Grade),
transform,
Grade_Surveyed = sum(Surveyed))
# 4:
# Merge gmSbse_df with et_df: Enrollment by Grade
# Fills
# Column
# Enroll
gmSbse_df_morning <- mergeDF(gmSbse_df_morning,
et_df,
data.column1 = "Enroll",
data.column2 = "value",
by.x = "Grade",
by.y = "variable")
gmSbse_df_afternoon <- mergeDF(gmSbse_df_afternoon,
et_df,
data.column1 = "Enroll",
data.column2 = "value",
by.x = "Grade",
by.y = "variable")
gmSbse_df_morning <-  subset(gmSbse_df_morning,Enroll > 0)
gmSbse_df_morning <-  droplevels(gmSbse_df_morning)
gmSbse_df_afternoon <-  subset(gmSbse_df_afternoon,Enroll > 0)
gmSbse_df_afternoon <-  droplevels(gmSbse_df_afternoon)
# 6:
# Sum students by buffer
mSb_df_morning <- ddply(gmSbse_df_morning,
.(Mode,Buffer),
summarise,
(Surveyed*Enroll/Grade_Surveyed,na.rm=T))
mSb_df_afternoon <- ddply(gmSbse_df_afternoon,
.(Mode,Buffer),
summarise,
Estimate = sum(Surveyed*Enroll/Grade_Surveyed,na.rm=T))
mSb_df_morning$time
gmSbse_df <- gmSbse_df_create()
gbmTS_df_temp_morning <- count(DF,.(grade,BUFF_DIST,ModeToMod))
gbmTS_df_temp_afernoon <- count(DF,.(grade,BUFF_DIST,ModeFromMod))
library(plyr)
gbmTS_df_temp_morning <- count(DF,.(grade,BUFF_DIST,ModeToMod))
gbmTS_df_temp_afernoon <- count(DF,.(grade,BUFF_DIST,ModeFromMod))
gmSbse_df_morning <- gmSbse_df
gmSbse_df_afternoon <- gmSbse_df
gmSbse_df_morning <- mergeDF(gmSbse_df_morning,
gbmTS_df_temp,
data.column1 = "Surveyed",
data.column2 = "freq",
by.x = c("Grade","Buffer","Mode"),
by.y = c("grade","BUFF_DIST","ModeToMod"))
gmSbse_df_afternoon <- mergeDF(gmSbse_df_afternoon,
gbmTS_df_temp,
data.column1 = "Surveyed",
data.column2 = "freq",
by.x = c("Grade","Buffer","Mode"),
by.y = c("grade","BUFF_DIST","ModeFromMod"))
# 3:
names(gmSbse_df)
names(gmSbse_df_afternoon)
names(gmSbse_df_morning)
gmSbse_df <- gmSbse_df_create()
gbmTS_df_temp_morning <- count(DF,.(grade,BUFF_DIST,ModeToMod))
gbmTS_df_temp_afernoon <- count(DF,.(grade,BUFF_DIST,ModeFromMod))
nmaes(gbmTS_df_temp_morning)
names(gbmTS_df_temp_morning)
gmSbse_df_morning <- gmSbse_df
gmSbse_df_afternoon <- gmSbse_df
gmSbse_df_morning <- mergeDF(gmSbse_df_morning,
gbmTS_df_temp_morning,
data.column1 = "Surveyed",
data.column2 = "freq",
by.x = c("Grade","Buffer","Mode"),
by.y = c("grade","BUFF_DIST","ModeToMod"))
gmSbse_df_afternoon <- mergeDF(gmSbse_df_afternoon,
gbmTS_df_temp_afernoon,
data.column1 = "Surveyed",
data.column2 = "freq",
by.x = c("Grade","Buffer","Mode"),
by.y = c("grade","BUFF_DIST","ModeFromMod"))
gmSbse_df_morning
gmSbse_df_morning <- ddply(gmSbse_df_morning,
.(Grade),
transform,
Grade_Surveyed = sum(Surveyed))
gmSbse_df_afternoon <- ddply(gmSbse_df_afternoon,
.(Grade),
transform,
Grade_Surveyed = sum(Surveyed))
gmSbse_df_morning <- mergeDF(gmSbse_df_morning,
et_df,
data.column1 = "Enroll",
data.column2 = "value",
by.x = "Grade",
by.y = "variable")
gmSbse_df_afternoon <- mergeDF(gmSbse_df_afternoon,
et_df,
data.column1 = "Enroll",
data.column2 = "value",
by.x = "Grade",
by.y = "variable")
gmSbse_df_morning <-  subset(gmSbse_df_morning,Enroll > 0)
gmSbse_df_morning <-  droplevels(gmSbse_df_morning)
gmSbse_df_afternoon <-  subset(gmSbse_df_afternoon,Enroll > 0)
gmSbse_df_afternoon <-  droplevels(gmSbse_df_afternoon)
mSb_df_morning <- ddply(gmSbse_df_morning,
.(Mode,Buffer),
summarise,
(Surveyed*Enroll/Grade_Surveyed,na.rm=T))
mSb_df_afternoon <- ddply(gmSbse_df_afternoon,
.(Mode,Buffer),
summarise,
Estimate = sum(Surveyed*Enroll/Grade_Surveyed,na.rm=T))
mSb_df_morning <- ddply(gmSbse_df_morning,
.(Mode,Buffer),
summarise,
(Surveyed*Enroll/Grade_Surveyed,na.rm=T))
mSb_df_morning <- ddply(gmSbse_df_morning,
.(Mode,Buffer),
summarise,
Estimate = sum(Surveyed*Enroll/Grade_Surveyed,na.rm=T))
mSb_df_afternoon <- ddply(gmSbse_df_afternoon,
.(Mode,Buffer),
summarise,
Estimate = sum(Surveyed*Enroll/Grade_Surveyed,na.rm=T))
names(mSb_df_morning)
head(mSb_df_morning)
mSb_df_morning$time <- "Morning"
mSb_df_afternoon$time <- "Afternoon"
mSb_df <- rbind(mSb_df_morning,mSb_df_afternoon)
names(mSb_df)
mSb_df
mByBuffer1 <- ggplot(data = mSb_df,
aes(x = Buffer,
y = Estimate,
fill = Mode),
position="dodge")
mByBuffer2 <- mByBuffer1 + geom_bar(stat = "identity")
mByBuffer3 <- mByBuffer2 + labs(title = paste("Students by Walkshed and Morning Travel Mode\n",
School_Name,sep=""),
y = "Estimated Number of Trips, Morning Commute")
mByBuffer4 <- mByBuffer3 + scale_fill_manual("",
values = c("#D9A09A","#F2E8A5","#A3BAA7"),
labels = c("Auto", "School Bus", "Walk"))
mByBuffer5 <- mByBuffer4 + theme_minimal()
mByBuffer5
library(ggplot2)
mByBuffer1 <- ggplot(data = mSb_df,
aes(x = Buffer,
y = Estimate,
fill = Mode),
position="dodge")
mByBuffer2 <- mByBuffer1 + geom_bar(stat = "identity")
mByBuffer3 <- mByBuffer2 + labs(title = paste("Students by Walkshed and Morning Travel Mode\n",
School_Name,sep=""),
y = "Estimated Number of Trips, Morning Commute")
mByBuffer4 <- mByBuffer3 + scale_fill_manual("",
values = c("#D9A09A","#F2E8A5","#A3BAA7"),
labels = c("Auto", "School Bus", "Walk"))
mByBuffer5 <- mByBuffer4 + theme_minimal()
mByBuffer5
mByBuffer1 <- ggplot(data = mSb_df,
aes(x = Buffer,
y = Estimate,
fill = Mode))
mByBuffer2 <- mByBuffer1 + geom_bar(stat = "identity",position="dodge")
mByBuffer3 <- mByBuffer2 + labs(title = paste("Students by Walkshed and Morning Travel Mode\n",
School_Name,sep=""),
y = "Estimated Number of Trips, Morning Commute")
mByBuffer4 <- mByBuffer3 + scale_fill_manual("",
values = c("#D9A09A","#F2E8A5","#A3BAA7"),
labels = c("Auto", "School Bus", "Walk"))
mByBuffer5 <- mByBuffer4 + theme_minimal()
mByBuffer5
?facet_grid
mByBuffer1 <- ggplot(data = mSb_df,
aes(x = Buffer,
y = Estimate,
fill = Mode))
mByBuffer2 <- mByBuffer1 + geom_bar(stat = "identity")
mByBuffer3 <- mByBuffer2 + facet_grid(time ~ .)
mByBuffer4 <- mByBuffer3 + labs(title = paste("Students by Walkshed and Morning Travel Mode\n",
School_Name,sep=""),
y = "Estimated Number of Trips, Morning Commute")
mByBuffer5 <- mByBuffer4 + scale_fill_manual("",
values = c("#D9A09A","#F2E8A5","#A3BAA7"),
labels = c("Auto", "School Bus", "Walk"))
mByBuffer6 <- mByBuffer5 + theme_minimal()
mByBuffer6
mByBuffer1 <- ggplot(data = mSb_df,
aes(x = Buffer,
y = Estimate,
fill = Mode))
mByBuffer2 <- mByBuffer1 + geom_bar(stat = "identity")
mByBuffer3 <- mByBuffer2 + facet_grid(. ~ time)
mByBuffer4 <- mByBuffer3 + labs(title = paste("Students by Walkshed and Morning Travel Mode\n",
School_Name,sep=""),
y = "Estimated Number of Trips, Morning Commute")
mByBuffer5 <- mByBuffer4 + scale_fill_manual("",
values = c("#D9A09A","#F2E8A5","#A3BAA7"),
labels = c("Auto", "School Bus", "Walk"))
mByBuffer6 <- mByBuffer5 + theme_minimal()
mByBuffer6
source("compile.R")
source("compile.R")
source("compile.R")
mSb_df_wide_morning <- modeDFwideFunction(mSb_df[mSb_df$time=="Morning",])
mSb_df_wide_morning[,2:6] <- round(mSb_df_wide_morning[,2:6],0)
mSb_df_wide_morning[,2:6] <- lapply(mSb_df_wide_morning[,2:6],as.character)
mSb_df_wide_morning_pct <- mSb_df_wide_morning[,c(1,7:11)]
modeDFwideFunction
mSb_df[mSb_df$time=="Morning",]
fix(modeDFwideFunction)
fix(modeDFwideFunction)
fix(modeDFwideFunction)
mSb_df_wide_morning <- modeDFwideFunction(mSb_df[mSb_df$time=="Morning",c("Mode","Buffer","Estimate")])
mSb_df_wide_morning[,2:6] <- round(mSb_df_wide_morning[,2:6],0)
mSb_df_wide_morning[,2:6] <- lapply(mSb_df_wide_morning[,2:6],as.character)
mSb_df_wide_morning_pct <- mSb_df_wide_morning[,c(1,7:11)]
mSb_df_wide_afternoon <- modeDFwideFunction(mSb_df[mSb_df$time=="Afternoon",c("Mode","Buffer","Estimate")])
mSb_df_wide_afternoon[,2:6] <- round(mSb_df_wide_afternoon[,2:6],0)
mSb_df_wide_afternoon[,2:6] <- lapply(mSb_df_wide_afternoon[,2:6],as.character)
mSb_df_wide_afternoon_pct <- mSb_df_wide_afternoon[,c(1,7:11)]
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
mSb_df
allSchComp
plot(allSchComp$PctMile,allSchComp$ghgPerCap)
plot(allSchComp$PctMile,allSchComp$ghgPerCap)
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
pSaggLatex
pSagg
ghgBufferDFgeneric
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
names(mSb_df)
mSb_df
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
source("compile.R")
ghgBufferDFgeneric
source("compile.R")
fix(theme_minimal)
