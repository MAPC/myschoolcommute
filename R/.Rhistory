\begin{table}[H]
\captionsetup{width=.75\textwidth}
\caption*{Travel Mode, Morning and Afternoon}
<<mByBuffer_table, echo=FALSE, eval=TRUE, results="asis">>=
@
\end{table}
%%%%% End New Code %%%%%
<<modeByBufferTableMorning, echo=FALSE,eval=TRUE, results="asis">>=
@
\thispagestyle{empty}
<<modeByBufferTableAfternoon, echo=FALSE,eval=TRUE, results="asis">>=
@
\columnbreak
\section*{Greenhouse Gas Emissions (GHG)}
\begin{itemize*}
\item Per-student GHGs within 1 mile: \Sexpr{round(ghgPerCap10Buffer,0)} kg
\item Per-student GHGs beyond 1 mile: \Sexpr{round(ghgPerCap10PlusBuffer,0)} kg
\end{itemize*}
Transportation generates more than one-third of the total greenhouse gas (GHG) emissions produced in Massachusetts. Increasing the number of trips made by walking or biking is a critical step toward achieving state goals for GHG reduction.  The following table shows the estimated annual GHG emissions (in kilograms of CO2) for students being driven to school, by walkshed. (It does not include emissions from school buses.) For comparison, the average Massachusetts household drives about 19,000 miles per year, generating approximately 8,000 kg of GHG emissions.
<<ghgTableSchool,  echo=FALSE, eval=TRUE, results="asis">>=
@
%
\thispagestyle{empty}
\section*{How Your School Compares}
The table below compares your school's actual walk \textbackslash bike share to an expected value reflecting average walking and biking rates across Massachusetts. The expected value accounts for student grade levels and proximity to school, and is based on more than 6,000 surveys collected statewide since 2011.
\begin{table}[H]
\captionsetup{width=.75\textwidth}
\caption*{Actual and Expected Walk\textbackslash Bike Share}
<<walkExpectedActual,  echo=FALSE, eval=TRUE, results="asis">>=
@
\end{table}
\section*{The Benefits of Walking and Biking}
Shifting some school commutes from auto to walking or biking can create real benefits for your community.  This section estimates the traffic, physical activity, and GHG benefits that might result from increasing walking and biking. It can help you make the case for investing in Safe Routes to School programs and to track your progress over time.
\Sexpr{scenarioText}
\begin{itemize*}
\item Reduce number of daily car trips to and from school by \Sexpr{dailyAutoReduce}.
\item Provide an additional \Sexpr{round(avgMinutesWalking)} minutes of physical activity for each newly participating student.
\item Reduce annual auto-generated GHG emissions from between \Sexpr{annualGHGreductionLowText} kg to \Sexpr{annualGHGreductionHighText} kg, or \Sexpr{round(annualGHGreductionLowPct, 1)}\% to \Sexpr{round(annualGHGreductionHighPct, 1)}\%.
\end{itemize*}
\end{multicols}
\end{document}
source("compile.R")
source("compile.R")
View(df_all)
table(df_all$schid)
paste("Reports/","no_school_id.pdf",sep="")
source("compile.R")
?try
source("compile.R")
View(enrollment10_11)
enrollment11_12 = read.csv("enrollment11_12.csv",
as.is = T)
enrollment13_14 = read.csv("enrollment13_14.csv",
as.is = T)
names(enrollment10_11)
names(enrollment13_14)
enrollment11_12 = read.csv("enrollment11_12.csv",
as.is = T)
enrollment13_14 = read.csv("enrollment13_14.csv",
as.is = T)
source("compile.R")
source("compile.R")
warnings()
warnings()
source("compile.R")
source("compile.R")
?stop
table(df_all$schid)
ORG_CODE == "06450310"
source("generate_report.R")
School_Name <- enrollmentDF[enrollmentDF$ORG.CODE==ORG_CODE,"SCHOOL"]
school_name_no_space <- gsub("\\s","",School_Name)
knit2pdf("minimal.Rnw", compiler = "lualatex")
file.rename("minimal.pdf",
paste("Reports/",
paste(school_name_no_space,".pdf",sep=""),
sep=""))
ORG_CODE
ORG_CODE == "06450310"
source("generate_report.R")
School_Name <- enrollmentDF[enrollmentDF$ORG.CODE==ORG_CODE,"SCHOOL"]
school_name_no_space <- gsub("\\s","",School_Name)
knit2pdf("minimal.Rnw", compiler = "lualatex")
file.rename("minimal.pdf",
paste("Reports/",
paste(school_name_no_space,".pdf",sep=""),
sep=""))
ORG_CODE
ORG_CODE = "06450310"
source("generate_report.R")
School_Name <- enrollmentDF[enrollmentDF$ORG.CODE==ORG_CODE,"SCHOOL"]
school_name_no_space <- gsub("\\s","",School_Name)
knit2pdf("minimal.Rnw", compiler = "lualatex")
file.rename("minimal.pdf",
paste("Reports/",
paste(school_name_no_space,".pdf",sep=""),
sep=""))
ORG_CODE
source("generate_report.R")
School_Name <- enrollmentDF[enrollmentDF$ORG.CODE==ORG_CODE,"SCHOOL"]
school_name_no_space <- gsub("\\s","",School_Name)
knit2pdf("minimal.Rnw", compiler = "lualatex")
file.rename("minimal.pdf",
paste("Reports/",
paste(school_name_no_space,".pdf",sep=""),
sep=""))
ORG_CODE = "06450310"
source("generate_report.R")
library(RPostgreSQL)
library(DBI)
library(reshape2)
library(plyr)
library(ggplot2)
library(scales)
library(knitr)
library(Hmisc)
# test with 1 response
ORG_CODE = "06450310"
source("generate_report.R")
# test with more than 10 responses
ORG_CODE = "06450310"
source("generate_report.R")
# test with missing org code
ORG_CODE = "00020025"
source("generate_report.R")
ORG_CODE = "06450310"
source("generate_report.R")
table(df_all#schid)
table(df_all$schid)
ORG_CODE = "02480014"
source("generate_report.R")
ORG_CODE = "00020025"
source("generate_report.R")
table(df_all$schid)
names(df_all)
df_all$school_id[!(df$school_id %in% enrollment12_13$SCHOOL)]
names(enrollment12_13)
df_all$school_id[!(df$school_id %in% enrollment12_13$ORG.CODE)]
df_all$school_id[!(df_all$school_id %in% enrollment12_13$ORG.CODE)]
nrow(df_all)
names(df_all)
df_all$schid[!(df_all$schid %in% enrollment12_13$ORG.CODE)]
ORG_CODE = "06450310"
source("generate_report.R")
ORG_CODE = "02480014"
source("generate_report.R")
ORG_CODE = "05160002"
source("generate_report.R")
letters[1:5]
for (letter in letters[1:5]) {
print(letter)
}
for (letter in letters[1:5]) {
if (letter %in% letters[1:2]) {
print ("a or b")
}
else if (letter %in% letters[3:4]) {
print ("c or d")
}
else {
print ("definitely e")
}
}
survey_dates
get_dates = function(date1, date2) {
start_date = date1
start_month <- format(start_date,format = "%B")
start_year <- format(start_date,format = "%Y")
end_date = date2
end_month <- format(end_date,format = "%B")
end_year <- format(end_date,format = "%Y")
return(list(start_date=start_date,
start_month=start_month,
start_year=start_year,
end_date=end_date,
end_month=end_month,
end_year=end_year))
}
View(df_all)
get_dates("2012-06-01", "2013-06-14")
get_dates = function(date1, date2) {
start_date = as.Date(date1)
start_month <- format(start_date, format = "%B")
start_year <- format(start_date,format = "%Y")
end_date = date2
end_month <- format(end_date,format = "%B")
end_year <- format(end_date,format = "%Y")
return(list(start_date=start_date,
start_month=start_month,
start_year=start_year,
end_date=end_date,
end_month=end_month,
end_year=end_year))
}
get_dates("2012-06-01", "2013-06-14")
get_dates = function(date1, date2) {
start_date = as.Date(date1)
start_month <- format(start_date, format = "%B")
start_year <- format(start_date,format = "%Y")
end_date = as.Date(date2)
end_month <- format(end_date,format = "%B")
end_year <- format(end_date,format = "%Y")
return(list(start_date=start_date,
start_month=start_month,
start_year=start_year,
end_date=end_date,
end_month=end_month,
end_year=end_year))
}
get_dates("2012-06-01", "2013-06-14")
get_dates = function(date1, date2) {
start_date = as.Date(date1)
start_month <- format(start_date, format = "%B")
start_year <- format(start_date, format = "%Y")
end_date = as.Date(date2)
end_month <- format(end_date, format = "%B")
end_year <- format(end_date, format = "%Y")
return(list(start_date=start_date,
start_month=start_month,
start_year=start_year,
end_date=end_date,
end_month=end_month,
end_year=end_year))
}
get_dates
date_list
date1
date1 = "2012-06-01"
date2 = "2013-06-01"
ORG_CODE = "06450310"
source("generate_report.R")
a-to-e = letters[1:5]
for (letter in a-to-e) {
if (letter %in% a-to-e[1:2]) {
print ("a or b")
}
else if (letter %in% a-to-e[3:4]) {
pring ("c or d")
}
else {
print ("definitely e")
}
}
a-to-e = letters[1:5]
for (letter in a-to-e) {
if (letter %in% a-to-e[1:2]) {
print ("a or b")
}
else if (letter %in% a-to-e[3:4]) {
pring ("c or d")
}
else {
print ("definitely e")
}
}
a_to_e = letters[1:5]
for (letter in a_to_e) {
if (letter %in% a_to_e[1:2]) {
print ("a or b")
}
else if (letter %in% a_to_e[3:4]) {
pring ("c or d")
}
else {
print ("definitely e")
}
}
a_to_e = letters[1:5]
for (letter in a_to_e) {
if (letter %in% a_to_e[1:2]) {
print ("a or b")
}
else if (letter %in% a_to_e[3:4]) {
print ("c or d")
}
else {
print ("definitely e")
}
}
ORG_CODE = "06450310"
source("generate_report.R")
a_to_e = letters[1:5]
for (letter in a_to_e) {
if (letter %in% a_to_e[1:2]) {
print ("a or b")
}
else if (letter %in% a_to_e[3:4]) {
print ("c or d")
}
else if (letter %in% a_to_e[2:4]) {
print ("impossible")
}
else {
print ("definitely e")
}
}
ORG_CODE = "06450310"
source("generate_report.R")
get_enrollment_df = function(start_date) {
df = ifelse(start_date < as.Date("2011-07-30"), enrollment10_11,
ifelse(start_date < as.Date("2012-07-30"), enrollment11_12,
ifelse(start_date < as.Date("2013-07-30"), enrollment12_13,
enrollment13_14)))
return(df)
}
get_enrollment_date = function(start_date) {
sd = ifelse(start_date < as.Date("2011-07-30"), "2010-2011",
ifelse(start_date < as.Date("2012-07-30"), "2011-2012",
ifelse(start_date < as.Date("2013-07-30"), "2012-2013",
"2013-2014")))
return(sd)
}
source("compile.R")
source("compile.R")
source("compile.R")
ls()
View(enrollment10_11)
View(enrollment11_12)
View(enrollment12_13)
View(enrollment13_14)
View(enrollment13_14)
View(enrollment12_13)
rep("0", 0)
paste(rep("0", 0), "abc")
paste(rep("0", 0), "abc", sep = "")
paste(rep("0", 1), "abc", sep = "")
pad_org_code = function(org_column) {
apply(org_column, left_pad)
}
View(enrollment12_13)
View(enrollment13_14)
dftest = enrollment13_14
dftest$ORG.CODE = pad_org_code(dftest$ORG.CODE)
?apply
pad_org_code = function(org_column) {
sapply(org_column, left_pad)
}
dftest$ORG.CODE = pad_org_code(dftest$ORG.CODE)
left_pad = function(str, len = 8) {
length_diff = len - length(str)
zeros = rep("0", length_diff)
return(paste(zeros, str, sep = ""))
}
dftest$ORG.CODE = pad_org_code(dftest$ORG.CODE)
dftest
pad_org_code(dftest$ORG.CODE)
str(pad_org_code(dftest$ORG.CODE))
View(dftest$ORG.CODE)
View(pad_org_code(dftest$ORG.CODE))
View(enrollment13_14)
dftest$ORG.CODE
pad_org_code
pad_org_code = function(org_column) {
vapply(org_column, left_pad)
}
dftest = enrollment13_14
dftest$ORG.CODE = pad_org_code(dftest$ORG.CODE)
?sapply
pad_org_code = function(org_column) {
lapply(org_column, left_pad)
}
dftest = enrollment13_14
dftest$ORG.CODE = pad_org_code(dftest$ORG.CODE)
View(dftest)
vapply(1:10, "*", 2)
sapply(1:10, "*", 2)
lapply(1:10, "*", 2)
left_pad("hi")
rep("0", 8)
paste(rep("0", 8), sep = "")
paste(rep("0", 8), collapse = "")
left_pad = function(str, len = 8) {
length_diff = len - length(str)
zeros = paste(rep("0", length_diff), collapse = "")
return(paste(zeros, str, sep = ""))
}
pad_org_code = function(org_column) {
sapply(org_column, left_pad)
}
dftest = enrollment13_14
dftest$ORG.CODE = pad_org_code(dftest$ORG.CODE)
View(dftest)
dftest = enrollment13_14
dftest = enrollment13_14
View(dftest)
dftest = enrollment13_14
dftest$ORG.CODE.test = pad_org_code(dftest$ORG.CODE)
dftest = enrollment13_14
dftest$ORG.CODE.test = pad_org_code(dftest$ORG.CODE)
View(dftest[,c("ORG.CODE", "ORG.CODE.test")])
pad_org_code(c("good", "bye", "cruel", "world"))
left_pad("hello")
left_pad = function(str, len = 8) {
length_diff = len - nchar(str)
zeros = paste(rep("0", length_diff), collapse = "")
return(paste(zeros, str, sep = ""))
}
pad_org_code(c("good", "bye", "cruel", "world"))
dftest = enrollment13_14
dftest$ORG.CODE.test = pad_org_code(dftest$ORG.CODE)
View(dftest[,c("ORG.CODE", "ORG.CODE.test")])
max(nchar(dftest$ORG.CODE.test))
min(nchar(dftest$ORG.CODE.test))
enrollment13_14$ORG.CODE = pad_org_code(enrollment13_14$ORG.CODE)
View(enrollment13_14)
View(enrollment12_13)
View(enrollment11_12)
enrollment11_12$ORG.CODE = pad_org_code(enrollment11_12$ORG.CODE)
View(enrollment11_12)
rm(dftest)
ORG_CODE = "02480014"
source("generate_report.R")
View(subset, df_all, ORG.CODE == "02480014")
View(subset(df_all, ORG.CODE == "02480014"))
names(df_all)
View(subset(df_all, schid == "02480014"))
ORG_CODE = "02480014"
source("generate_report.R")
ORG_CODE
start_date
enrollmentDF = get_enrollment_df(start_date)
View(enrollmentDF)
get_enrollment_df
View(enrollment10_11)
start_date
View(enrollment11_12)
enrollmentDF = get_enrollment_df(start_date)
View(WenrollmentDF)
View(enrollmentDF)
get_enrollment_df(start_date)
get_enrollment_df
get_enrollment_df = function(start_date) {
if (start_date < as.Date("2011-07-30") {
df = enrollment10_11
}
else if (start_date < as.Date("2012-07-30")) {
df = enrollment11_12
}
else if (start_date < as.Date("2013-07-30")) {
df = enrollment12_13
}
else {
df = enrollment13_14
}
return(df)
}
get_enrollment_df = function(start_date) {
if (start_date < as.Date("2011-07-30") {
df = enrollment10_11
}
else if (start_date < as.Date("2012-07-30")) {
df = enrollment11_12
}
else if (start_date < as.Date("2013-07-30")) {
df = enrollment12_13
}
else {
df = enrollment13_14
}
return(df)
}
get_enrollment_df = function(start_date) {
if (start_date < as.Date("2011-07-30") {
df = enrollment10_11
}
else if (start_date < as.Date("2012-07-30")) {
df = enrollment11_12
}
else if (start_date < as.Date("2013-07-30")) {
df = enrollment12_13
}
else {
df = enrollment13_14
}
return(df)
}
get_enrollment_df = function(start_date) {
if (start_date < as.Date("2011-07-30")) {
df = enrollment10_11
}
else if (start_date < as.Date("2012-07-30")) {
df = enrollment11_12
}
else if (start_date < as.Date("2013-07-30")) {
df = enrollment12_13
}
else {
df = enrollment13_14
}
return(df)
}
get_enrollment_date = function(start_date) {
if (start_date < as.Date("2011-07-30")) {
df = "2010-2010"
}
else if (start_date < as.Date("2012-07-30")) {
df = "2011-2012"
}
else if (start_date < as.Date("2013-07-30")) {
df = "2012-2013"
}
else {
df = "2013-2014"
}
return(df)
}
ORG_CODE = "02480014"
source("generate_report.R")
ORG_CODE = "05160002"
source("generate_report.R")
ORG_CODE = "06450310"
source("generate_report.R")
